# 번역기
translator = Translator()

# 번역 함수
def translate(text):
    return translator.translate(text, src='ko', dest='en').text

# AI 감지 함수
def detect_ai_score(text, api_key):
    response = requests.post(
        "https://api.sapling.ai/api/v1/aidetect",
        json={
            "key": api_key,
            "text": text
        }
    )
    result = response.json()
    return round(result["score"] * 100, 2) if "score" in result else None

# 전체 처리 함수
def process_review(korean_text, api_key):
    try:
        # 한글 텍스트를 영어로 번역
        english_text = translate(korean_text)
        
        # AI 감지 점수 계산
        score = detect_ai_score(english_text, api_key)
        
        # 30% 이하인 경우에는 결과 리스트에 저장하지 않음
        if score is not None and score <= 30:
            return None  # 30% 이하인 경우 None을 반환하여 리스트에 추가되지 않게 함
        
        # 한글 텍스트만 저장
        return {
            "original_korean": korean_text
        }
    except Exception as e:
        return {
            "original_korean": korean_text,
            "error": str(e)
        }

# 실행부
if __name__ == "__main__":
    api_key = "ZH5PGVIA3OYKV95LSU6TFNYOP2XMHO8Q"  # 본인 키로 변경

    # 테스트용 리뷰 리스트 (50~100개까지 확장 가능)
    
    review_list = []  # 여기에 최대 100개 리뷰 입력 가능

    results = []

    with ThreadPoolExecutor(max_workers=10) as executor:
        future_to_review = {executor.submit(process_review, review, api_key): review for review in review_list}
        for future in as_completed(future_to_review):
            result = future.result()
            if result:  # None이 아닌 경우에만 결과를 저장
                results.append(result)
               
